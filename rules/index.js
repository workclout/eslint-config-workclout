// const OFF = 0;
const WARN = 1;
const ERROR = 2;

module.exports = {
  extends: [
    'eslint:recommended',
  ],
  env: {
    node: true,
    es6: true,
  },
  parserOptions: {
    ecmaVersion: 2018,
  },
  rules: {
    'array-bracket-spacing': [ERROR, 'never'],
    'arrow-parens': [ERROR, 'as-needed'],
    'brace-style': ERROR,
    'camelcase': [ERROR, { properties: 'never', ignoreDestructuring: true }],
    'comma-dangle': [ERROR, 'always-multiline'],
    'comma-spacing': ERROR,
    'comma-style': ERROR,
    'computed-property-spacing': ERROR,
    'curly': ERROR,
    'eol-last': ERROR,
    'func-call-spacing': ERROR,
    'generator-star-spacing': [ERROR, { before: true, after: true }],
    'indent': [ERROR, 2, { SwitchCase: 1, MemberExpression: 'off' }],
    'key-spacing': [ERROR, { beforeColon: false, afterColon: true }],
    'keyword-spacing': [ERROR, { before: true, after: true }],
    'linebreak-style': ERROR,
    'max-len': [ERROR, {
      code: 110,
      comments: 110,
      ignoreUrls: true,
    }],
    'new-cap': [ERROR, {
      newIsCap: true,
      capIsNew: false,
      capIsNewExceptions: ['http.Server', 'express.Router'],
    }],
    'no-array-constructor': ERROR,
    'no-caller': ERROR,
    'no-extend-native': ERROR,
    'no-extra-bind': ERROR,
    'no-multiple-empty-lines': [ERROR, { max: 1 }],
    'no-multi-spaces': ERROR,
    'no-multi-str': ERROR,
    'no-new-object': ERROR,
    'no-new-wrappers': ERROR,
    'no-trailing-spaces': ERROR,
    'no-unused-vars': [ERROR, { vars: 'all', args: 'none' }],
    'no-useless-constructor': ERROR,
    'no-var': ERROR,
    'no-warning-comments': [WARN, { terms: ['todo', 'fixme'] }],
    'no-with': ERROR,
    'object-curly-spacing': [ERROR, 'always'],
    'one-var': [ERROR, 'never'],
    'operator-linebreak': [ERROR, 'after', { overrides: { '?': 'before', ':': 'before' } }],
    'padded-blocks': [ERROR, 'never'],
    'prefer-const': [ERROR, { destructuring: 'any', ignoreReadBeforeAssign: true }],
    'prefer-rest-params': ERROR,
    'prefer-spread': ERROR,
    'quote-props': [ERROR, 'consistent-as-needed'],
    'quotes': [ERROR, 'single', { allowTemplateLiterals: true }],
    'jsx-quotes': [ERROR, 'prefer-double'],
    'rest-spread-spacing': ERROR,
    'require-jsdoc': [ERROR, {
      require: {
        FunctionDeclaration: true,
        MethodDefinition: true,
        ArrowFunctionExpression: true,
      },
    }],
    'semi': ERROR,
    'semi-spacing': ERROR,
    'space-before-blocks': ERROR,
    'space-before-function-paren': [ERROR, {
      anonymous: 'never',
      named: 'never',
      asyncArrow: 'always',
    }],
    'space-in-parens': [ERROR, 'never'],
    'space-infix-ops': ERROR,
    'spaced-comment': [ERROR, 'always', {
      markers: ['global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ','],
    }],
    'valid-jsdoc': [ERROR, {
      requireReturn: false,
      requireReturnDescription: false,
      requireParamDescription: false,
      prefer: {
        returns: 'return',
      },
      preferType: {
        Void: 'void',
        Number: 'number',
        String: 'string',
        Boolean: 'boolean',
        array: 'Array',
        object: 'Object',
        function: 'Function',
        promise: 'Promise',
      },
    }],
  },
};
